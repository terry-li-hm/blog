---
import { PUBLIC_GOOGLE_SITE_VERIFICATION } from "astro:env/client";
import { SITE } from "@/config";
import "@/styles/global.css";

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage ? `/${SITE.ogImage}` : "/og.png",
  canonicalURL = new URL(Astro.url.pathname, Astro.url),
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
} = Astro.props;

const socialImageURL = new URL(ogImage, Astro.url);

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      url: "https://homing.li/",
      sameAs: [
        "https://www.linkedin.com/in/terrylihm/",
        "https://github.com/terry-li-hm"
      ],
      knowsAbout: [
        "Software Development",
        "Artificial Intelligence", 
        "Claude Code",
        "Technology",
        "Workflow Automation"
      ],
      jobTitle: "Software Engineer",
      email: "hello@homing.li"
    },
  ],
  publisher: {
    "@type": "Person",
    name: `${author}`,
    url: "https://homing.li/",
    sameAs: [
      "https://www.linkedin.com/in/terrylihm/",
      "https://github.com/terry-li-hm"
    ]
  },
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": `${canonicalURL}`
  }
};
---

<!doctype html>
<html lang={SITE.lang || "en"} class={scrollSmooth ? "scroll-smooth" : ""}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />
    <meta property="og:type" content="article" />
    <meta property="og:site_name" content={SITE.title} />
    <meta property="og:locale" content="en_US" />
    
    <!-- LinkedIn specific -->
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="627" />
    <meta property="profile:username" content="terrylihm" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Article Published/Modified time -->
    {pubDatetime && <meta property="article:published_time" content={pubDatetime.toISOString()} />}
    {modDatetime && <meta property="article:modified_time" content={modDatetime.toISOString()} />}

    {
      PUBLIC_GOOGLE_SITE_VERIFICATION && (
        <meta name="google-site-verification" content={PUBLIC_GOOGLE_SITE_VERIFICATION} />
      )
    }

    <!-- JSON LD -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

    <meta name="theme-color" content="" />
    <meta name="view-transition" content="same-origin" />
    
    <style is:global>
      /* Elegant fade transitions */
      ::view-transition-old(root),
      ::view-transition-new(root) {
        animation-duration: 0.2s;
        animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }
      
      /* Smoother fade for articles */
      ::view-transition-old(root) {
        animation-name: fade-out;
      }
      
      ::view-transition-new(root) {
        animation-name: fade-in;
      }
      
      @keyframes fade-out {
        from { opacity: 1; }
        to { opacity: 0; }
      }
      
      @keyframes fade-in {
        from { opacity: 0; }
        to { opacity: 1; }
      }
      
      /* Persist header during transitions */
      header {
        view-transition-name: site-header;
      }
    </style>
  </head>
  <body>
    <slot />
  </body>
</html>

